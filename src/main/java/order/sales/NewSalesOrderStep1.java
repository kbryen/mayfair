/*
 * Mayfair Stock Control.
 *
 */
package main.java.order.sales;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JDesktopPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import main.java.MayfairStatic;
import static main.java.MayfairStatic.CUSTOMERS_TABLE;
import static main.java.MayfairStatic.CUSTOMER_CUSTNUM;
import static main.java.MayfairStatic.CUSTOMER_NAME;
import static main.java.MayfairStatic.CUSTOMER_PROFORMA;
import static main.java.MayfairStatic.SALES_ORDER_TABLE;
import static main.java.MayfairStatic.SO_CUSTNUM;
import static main.java.MayfairStatic.SO_ORDNUM;
import static main.java.MayfairStatic.SO_TOTALUNITS;

/**
 *
 * @author kian_bryen
 */
public class NewSalesOrderStep1 extends javax.swing.JInternalFrame
{

    private final JDesktopPane desktop;

    /**
     * Creates new form SalesOrder
     *
     * @param pane Desktop Pane
     */
    public NewSalesOrderStep1(JDesktopPane pane)
    {
        initComponents();
        this.desktop = pane;
        enableButtons(false);
    }

    private void enableButtons(boolean enable)
    {
        comboFindCustomers.setVisible(enable);
        btnNext.setEnabled(enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldCustomerNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldCustomerName = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        comboFindCustomers = new javax.swing.JComboBox();
        btnNext = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnClear = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("New Sales Order");
        setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("New Sales Order");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel5.setText("Customer Details");

        jLabel3.setText("Customer Number");

        jLabel4.setText("OR");

        jLabel2.setText("Customer Name");

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFindActionPerformed(evt);
            }
        });

        comboFindCustomers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboFindCustomers.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                comboFindCustomersActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNextActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(fieldCustomerNumber))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)
                        .addComponent(fieldCustomerName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(comboFindCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4)))
                        .addGap(0, 106, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFind)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldCustomerNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fieldCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFind)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(comboFindCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        try (Statement statement = MayfairStatic.getConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE))
        {
            comboFindCustomers.removeAllItems();
            ResultSet rs = statement.executeQuery("SELECT " + CUSTOMER_CUSTNUM + ", " + CUSTOMER_NAME + " "
                    + "FROM " + CUSTOMERS_TABLE + " "
                    + "WHERE " + CUSTOMER_CUSTNUM + " LIKE '%" + fieldCustomerNumber.getText() + "%' "
                    + "AND " + CUSTOMER_NAME + " LIKE '%" + fieldCustomerName.getText() + "%' "
                    + "ORDER BY " + CUSTOMER_CUSTNUM + " ASC");
            while (rs.next())
            {
                comboFindCustomers.addItem(rs.getString(CUSTOMER_CUSTNUM) + " - " + rs.getString(CUSTOMER_NAME));
            }
            enableButtons(true);
        }
        catch (Exception ex)
        {
            MayfairStatic.outputMessage(this, ex);
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        String cust_num = fieldCustomerNumber.getText();
        if (!cust_num.isEmpty())
        {
            try (Statement updateStatement = MayfairStatic.getConnection().createStatement())
            {
                String sql = "INSERT INTO " + SALES_ORDER_TABLE + " (" + SO_CUSTNUM + ", " + SO_TOTALUNITS + ") "
                        + "VALUES (" + cust_num + ", 0)";
                updateStatement.executeUpdate(sql);

                MayfairStatic.writeToLog("CREATE NEW SALES ORDER");
                MayfairStatic.writeToLog(sql);

                try (Statement selectStatement = MayfairStatic.getConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE))
                {
                    ResultSet rs = selectStatement.executeQuery("SELECT " + SO_ORDNUM + " "
                            + "FROM " + SALES_ORDER_TABLE + " "
                            + "WHERE " + SO_CUSTNUM + " = " + cust_num + " "
                            + "ORDER BY " + SO_ORDNUM + " DESC LIMIT 1");
                    NewSalesOrderStep2 jFrame = new NewSalesOrderStep2(desktop, rs.getInt(SO_ORDNUM), 1);
                    desktop.add(jFrame);
                    MayfairStatic.setMaximum(jFrame);
                    jFrame.show();
                    this.dispose();
                }
            }
            catch (Exception ex)
            {
                MayfairStatic.outputMessage(this, ex);
            }
        }
        else
        {
            MayfairStatic.outputMessage(this, "Customer", "Please select a customer.", WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void comboFindCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFindCustomersActionPerformed
        String[] selected = ((String) comboFindCustomers.getSelectedItem()).split(" - ", 2);
        fieldCustomerNumber.setText(selected[0]);
        fieldCustomerName.setText(selected[1]);

        try (Statement statement = MayfairStatic.getConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE))
        {
            ResultSet rs = statement.executeQuery("SELECT " + CUSTOMER_PROFORMA + " "
                    + "FROM " + CUSTOMERS_TABLE + " "
                    + "WHERE " + CUSTOMER_CUSTNUM + " = " + fieldCustomerNumber.getText());
            rs.next();
            if (rs.getBoolean(CUSTOMER_PROFORMA))
            {
                MayfairStatic.outputMessage(this, "Pro Forma Alert", "<html><b>WARNING:</b> " + fieldCustomerName.getText() + " is a pro forma.</html>\nDo not send stock before the pro forma invoice is sent.", WARNING_MESSAGE);
            }
        }
        catch (Exception ex)
        {
            MayfairStatic.outputMessage(this, ex);
        }
    }//GEN-LAST:event_comboFindCustomersActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        fieldCustomerName.setText("");
        fieldCustomerNumber.setText("");
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNext;
    private javax.swing.JComboBox comboFindCustomers;
    private javax.swing.JTextField fieldCustomerName;
    private javax.swing.JTextField fieldCustomerNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
