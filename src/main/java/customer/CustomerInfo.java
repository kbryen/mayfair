/*
 * Mayfair Stock Control.
 *
 */
package main.java.customer;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import main.java.Database;
import main.java.MayfairStatic;
import static main.java.MayfairStatic.CUSTOMERS_TABLE;
import static main.java.MayfairStatic.CUSTOMER_BILLINGADDRESS;
import static main.java.MayfairStatic.CUSTOMER_COMMENTS;
import static main.java.MayfairStatic.CUSTOMER_CONTACT;
import static main.java.MayfairStatic.CUSTOMER_COUNTRY;
import static main.java.MayfairStatic.CUSTOMER_DELADDRESS;
import static main.java.MayfairStatic.CUSTOMER_DELIVERY;
import static main.java.MayfairStatic.CUSTOMER_EMAIL;
import static main.java.MayfairStatic.CUSTOMER_FAX;
import static main.java.MayfairStatic.CUSTOMER_NAME;
import static main.java.MayfairStatic.CUSTOMER_NUM;
import static main.java.MayfairStatic.CUSTOMER_PROFORMA;
import static main.java.MayfairStatic.CUSTOMER_REFERENCE;
import static main.java.MayfairStatic.CUSTOMER_TEL;

/**
 *
 * @author kian_bryen
 */
public class CustomerInfo extends javax.swing.JInternalFrame
{

    private final Database db = new Database();
    private final String type;
    private int custNum = 0;

    public CustomerInfo(int cust_num)
    {
        this.custNum = cust_num;
        this.type = "Edit";
        initComponents();
        enableBillingAddress(false);
        populateLables();
    }

    public CustomerInfo()
    {
        this.type = "Add";
        initComponents();
        enableBillingAddress(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        labelCustomer = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        fieldName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldReference = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldContact = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fieldAdd1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fieldAdd2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fieldCity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        fieldCounty = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fieldPostCode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        fieldTel = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnSave = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        fieldBAdd1 = new javax.swing.JTextField();
        fieldBAdd2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        fieldBPostCode = new javax.swing.JTextField();
        fieldBCounty = new javax.swing.JTextField();
        fieldBCity = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        fieldFax = new javax.swing.JTextField();
        fieldEmail = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        differentBillingAddress = new javax.swing.JCheckBox();
        btnSwitch = new javax.swing.JButton();
        fieldCountry = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        proforma = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        fieldComments = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        fieldInstructions = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Customer Information");

        labelCustomer.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        labelCustomer.setText("Customer");

        jLabel2.setText("* Company Name : ");

        jLabel3.setText("* Reference : ");

        jLabel4.setText("Contact Name : ");

        jLabel5.setText("Delivery Address : ");

        jLabel6.setText("* Address 1 : ");

        jLabel7.setText("Address 2 : ");

        jLabel8.setText("City :");

        jLabel9.setText("* County :");

        jLabel10.setText("* Post Code :");

        jLabel11.setText("Telephone Number : ");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel13.setText("* Address 1 : ");

        jLabel14.setText("Address 2 : ");

        jLabel15.setText("City :");

        jLabel16.setText("* County :");

        jLabel17.setText("* Post Code :");

        jLabel18.setText("Fax Number : ");

        jLabel19.setText("Email Address : ");

        differentBillingAddress.setText("Different Billing Address:");
        differentBillingAddress.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                differentBillingAddressActionPerformed(evt);
            }
        });

        btnSwitch.setText("<- Switch ->");
        btnSwitch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSwitchActionPerformed(evt);
            }
        });

        jLabel12.setText("Country : ");

        jLabel20.setText("Proforma : ");

        jLabel21.setText("Comments : ");

        jLabel22.setText("Delivery Instructions : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCustomer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2))
                                            .addGap(61, 61, 61)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel20))
                                            .addGap(82, 82, 82)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(proforma)
                                                .addComponent(fieldContact, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(277, 277, 277)
                                            .addComponent(differentBillingAddress))
                                        .addComponent(jLabel12)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addGap(97, 97, 97))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(56, 56, 56)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fieldAdd1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldAdd2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(fieldPostCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fieldCounty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fieldCountry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addGap(97, 97, 97))
                                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(56, 56, 56)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fieldBAdd1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldBAdd2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldBCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(fieldBPostCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fieldBCounty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnSwitch)
                                        .addGap(341, 341, 341))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(76, 76, 76)
                                                .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fieldComments, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fieldInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addGap(95, 95, 95)
                                                .addComponent(fieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel20)
                    .addComponent(proforma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(differentBillingAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldCounty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(fieldPostCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldBAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldBAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldBCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fieldBCounty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldBPostCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSwitch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(fieldComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(fieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateLables()
    {
        try (Statement statement = db.getConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE))
        {
            ResultSet rs = statement.executeQuery("SELECT * "
                    + "FROM " + CUSTOMERS_TABLE + " "
                    + "WHERE " + CUSTOMER_NUM + " = " + custNum);
            if (rs.next())
            {
                fieldReference.setText(rs.getString(CUSTOMER_REFERENCE));
                fieldName.setText(rs.getString(CUSTOMER_NAME));
                fieldContact.setText(rs.getString(CUSTOMER_CONTACT));
                fieldTel.setText(rs.getString(CUSTOMER_TEL));
                fieldFax.setText(rs.getString(CUSTOMER_FAX));
                fieldEmail.setText(rs.getString(CUSTOMER_EMAIL));
                fieldCountry.setText(rs.getString(CUSTOMER_COUNTRY));
                fieldComments.setText(rs.getString(CUSTOMER_COMMENTS));
                fieldInstructions.setText(rs.getString(CUSTOMER_DELIVERY));
                proforma.setSelected(rs.getBoolean(CUSTOMER_PROFORMA));

                String[] delAddress = rs.getString(CUSTOMER_DELADDRESS).split(", ");
                switch (delAddress.length)
                {
                    case 5:
                        fieldAdd1.setText(delAddress[0]);
                        fieldAdd2.setText(delAddress[1]);
                        fieldCity.setText(delAddress[2]);
                        fieldCounty.setText(delAddress[3]);
                        fieldPostCode.setText(delAddress[4]);
                        break;
                    case 4:
                        fieldAdd1.setText(delAddress[0]);
                        fieldCity.setText(delAddress[1]);
                        fieldCounty.setText(delAddress[2]);
                        fieldPostCode.setText(delAddress[3]);
                        break;
                    case 3:
                        fieldAdd1.setText(delAddress[0]);
                        fieldCounty.setText(delAddress[1]);
                        fieldPostCode.setText(delAddress[2]);
                        break;
                }

                String billAdd = rs.getString(CUSTOMER_BILLINGADDRESS);
                if (!billAdd.isEmpty())
                {
                    differentBillingAddress.setSelected(true);
                    fieldBAdd1.setEnabled(true);
                    fieldBAdd2.setEnabled(true);
                    fieldBCity.setEnabled(true);
                    fieldBCounty.setEnabled(true);
                    fieldBPostCode.setEnabled(true);
                    String[] billAddress = billAdd.split(", ");
                    switch (billAddress.length)
                    {
                        case 5:
                            fieldBAdd1.setText(billAddress[0]);
                            fieldBAdd2.setText(billAddress[1]);
                            fieldBCity.setText(billAddress[2]);
                            fieldBCounty.setText(billAddress[3]);
                            fieldBPostCode.setText(billAddress[4]);
                            break;
                        case 4:
                            fieldBAdd1.setText(billAddress[0]);
                            fieldBCity.setText(billAddress[1]);
                            fieldBCounty.setText(billAddress[2]);
                            fieldBPostCode.setText(billAddress[3]);
                            break;
                        case 3:
                            fieldBAdd1.setText(billAddress[0]);
                            fieldBCounty.setText(billAddress[1]);
                            fieldBPostCode.setText(billAddress[2]);
                            break;
                        default:
                            break;
                    }
                }
            }
            else
            {
                MayfairStatic.outputMessage(this, "No Customer", "Customer does not exist - " + custNum, ERROR_MESSAGE);
            }
        }
        catch (SQLException e)
        {
            MayfairStatic.outputMessage(this, e);
        }
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (!fieldReference.getText().isEmpty() && !fieldName.getText().isEmpty() && !fieldAdd1.getText().isEmpty() && !fieldCounty.getText().isEmpty() && !fieldPostCode.getText().isEmpty())
        {
            if ((differentBillingAddress.isSelected() && !fieldBAdd1.getText().isEmpty() && !fieldBCounty.getText().isEmpty() && !fieldBPostCode.getText().isEmpty()) || !differentBillingAddress.isSelected())
            {
                try (Statement statement = db.getConnection().createStatement())
                {
                    StringBuilder delAddress = new StringBuilder();
                    addToAddress(delAddress, fieldAdd1.getText());
                    addToAddress(delAddress, fieldAdd2.getText());
                    addToAddress(delAddress, fieldCity.getText());
                    addToAddress(delAddress, fieldCounty.getText());
                    delAddress.append(fieldPostCode.getText());

                    StringBuilder billAddress = new StringBuilder();
                    billAddress.append("");
                    if (differentBillingAddress.isSelected())
                    {
                        addToAddress(billAddress, fieldBAdd1.getText());
                        addToAddress(billAddress, fieldBAdd2.getText());
                        addToAddress(billAddress, fieldBCity.getText());
                        addToAddress(billAddress, fieldBCounty.getText());
                        billAddress.append(fieldBPostCode.getText());
                    }

                    String instructions = fieldInstructions.getText().isEmpty() ? "BETWEEN 10AM AND 4PM" : fieldInstructions.getText();

                    String sql = "";
                    switch (type)
                    {
                        case "Add":
                            db.writeToLog("ADD CUSTOMER");
                            sql = "INSERT INTO " + CUSTOMERS_TABLE + " ("
                                    + CUSTOMER_REFERENCE + ", "
                                    + CUSTOMER_NAME + ", "
                                    + CUSTOMER_CONTACT + ", "
                                    + CUSTOMER_TEL + ", "
                                    + CUSTOMER_DELADDRESS + ", "
                                    + CUSTOMER_BILLINGADDRESS + ", "
                                    + CUSTOMER_EMAIL + ", "
                                    + CUSTOMER_FAX + ", "
                                    + CUSTOMER_COUNTRY + ", "
                                    + CUSTOMER_COMMENTS + ", "
                                    + CUSTOMER_PROFORMA + ", "
                                    + CUSTOMER_DELIVERY + ") "
                                    + "VALUES ('"
                                    + fieldReference.getText() + "', '"
                                    + fieldName.getText() + "', '"
                                    + fieldContact.getText() + "', '"
                                    + fieldTel.getText() + "', '"
                                    + delAddress.toString() + "', '"
                                    + billAddress.toString() + "', '"
                                    + fieldEmail.getText() + "', '"
                                    + fieldFax.getText() + "', '"
                                    + fieldCountry.getText() + "', '"
                                    + fieldComments.getText() + "', "
                                    + proforma.isSelected() + ", '"
                                    + instructions + "')";
                            MayfairStatic.outputMessage(this, "Success", "Customer Added", INFORMATION_MESSAGE);
                            break;
                        case "Edit":
                            db.writeToLog("EDIT CUSTOMER");
                            sql = "UPDATE " + CUSTOMERS_TABLE + " "
                                    + "SET " + CUSTOMER_REFERENCE + " = '" + fieldReference.getText() + "', "
                                    + CUSTOMER_NAME + " = '" + fieldName.getText() + "', "
                                    + CUSTOMER_CONTACT + " = '" + fieldContact.getText() + "', "
                                    + CUSTOMER_TEL + " = '" + fieldTel.getText() + "', "
                                    + CUSTOMER_DELADDRESS + " = '" + delAddress.toString() + "', "
                                    + CUSTOMER_BILLINGADDRESS + " = '" + billAddress.toString() + "', "
                                    + CUSTOMER_EMAIL + " = '" + fieldEmail.getText() + "', "
                                    + CUSTOMER_FAX + " = '" + fieldFax.getText() + "', "
                                    + CUSTOMER_COUNTRY + " = '" + fieldCountry.getText() + "', "
                                    + CUSTOMER_COMMENTS + " = '" + fieldComments.getText() + "', "
                                    + CUSTOMER_PROFORMA + " = " + proforma.isSelected() + ", "
                                    + CUSTOMER_DELIVERY + " = '" + instructions + "' "
                                    + "WHERE " + CUSTOMER_NUM + " = " + custNum;
                            MayfairStatic.outputMessage(this, "Success", "Customer Updated", INFORMATION_MESSAGE);
                            break;
                    }

                    statement.executeUpdate(sql);
                    db.writeToLog(sql);
                    db.writeToLog(MayfairStatic.LOG_SEPERATOR);
                    this.dispose();
                }
                catch (SQLException e)
                {
                    MayfairStatic.outputMessage(this, e);
                }
            }
            else
            {
                MayfairStatic.outputMessage(this, "Incomplete", "Please complete all compulsory fields. (*)", ERROR_MESSAGE);
            }
        }
        else
        {
            MayfairStatic.outputMessage(this, "Incomplete", "Please complete all compulsory fields. (*)", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void addToAddress(StringBuilder address, String line)
    {
        if (!line.isEmpty())
        {
            address.append(line.replaceAll(",", "")).append(", ");
        }
    }

    private void differentBillingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_differentBillingAddressActionPerformed
        enableBillingAddress(differentBillingAddress.isSelected());
    }//GEN-LAST:event_differentBillingAddressActionPerformed

    private void enableBillingAddress(boolean enable)
    {
        fieldBAdd1.setEnabled(enable);
        fieldBAdd2.setEnabled(enable);
        fieldBCity.setEnabled(enable);
        fieldBCounty.setEnabled(enable);
        fieldBPostCode.setEnabled(enable);
        btnSwitch.setVisible(enable);
    }

    private void btnSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwitchActionPerformed
        String ad1 = fieldAdd1.getText();
        String ad2 = fieldAdd2.getText();
        String city = fieldCity.getText();
        String county = fieldCounty.getText();
        String postcode = fieldPostCode.getText();

        fieldAdd1.setText(fieldBAdd1.getText());
        fieldAdd2.setText(fieldBAdd2.getText());
        fieldCity.setText(fieldBCity.getText());
        fieldCounty.setText(fieldBCounty.getText());
        fieldPostCode.setText(fieldBPostCode.getText());

        fieldBAdd1.setText(ad1);
        fieldBAdd2.setText(ad2);
        fieldBCity.setText(city);
        fieldBCounty.setText(county);
        fieldBPostCode.setText(postcode);
    }//GEN-LAST:event_btnSwitchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSwitch;
    private javax.swing.JCheckBox differentBillingAddress;
    private javax.swing.JTextField fieldAdd1;
    private javax.swing.JTextField fieldAdd2;
    private javax.swing.JTextField fieldBAdd1;
    private javax.swing.JTextField fieldBAdd2;
    private javax.swing.JTextField fieldBCity;
    private javax.swing.JTextField fieldBCounty;
    private javax.swing.JTextField fieldBPostCode;
    private javax.swing.JTextField fieldCity;
    private javax.swing.JTextField fieldComments;
    private javax.swing.JTextField fieldContact;
    private javax.swing.JTextField fieldCountry;
    private javax.swing.JTextField fieldCounty;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldFax;
    private javax.swing.JTextField fieldInstructions;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldPostCode;
    private javax.swing.JTextField fieldReference;
    private javax.swing.JTextField fieldTel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JCheckBox proforma;
    // End of variables declaration//GEN-END:variables
}
