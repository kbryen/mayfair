/*
 * Mayfair Stock Control.
 *
 */
package main.java.reminders;

import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JDesktopPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.JTextField;
import main.java.MayfairStatic;
import static main.java.MayfairStatic.REMINDERS_TABLE;
import static main.java.MayfairStatic.REMINDER_DATE;
import static main.java.MayfairStatic.REMINDER_DESCRIPTION;

/**
 *
 * @author kian_bryen
 */
public class NewReminder extends javax.swing.JInternalFrame
{

    private final JDesktopPane desktop;

    public NewReminder(JDesktopPane desktop)
    {
        initComponents();
        this.desktop = desktop;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        labelOrdPrice = new javax.swing.JLabel();
        celDate = new com.toedter.calendar.JDateChooser();
        fieldDescription = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Reminders");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(445, 360));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("New Reminder");

        jLabel3.setText("Completion Date");

        jLabel4.setText("Description");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddActionPerformed(evt);
            }
        });

        celDate.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldDescription)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(0, 74, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelOrdPrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(celDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelOrdPrice)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(celDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 38, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String date = ((JTextField) celDate.getDateEditor().getUiComponent()).getText();
        if (!date.isEmpty())
        {
            try (Statement statement = MayfairStatic.getConnection().createStatement())
            {
                MayfairStatic.writeToLog("ADD REMINDER");
                String sql = "INSERT INTO " + REMINDERS_TABLE + " (" + REMINDER_DESCRIPTION + ", " + REMINDER_DATE + ") "
                        + "VALUES ('" + fieldDescription.getText() + "', '" + date + "')";
                statement.executeUpdate(sql);
                MayfairStatic.writeToLog(sql);

                MayfairStatic.outputMessage(this, "New Reminder", "Reminder successfully added.", INFORMATION_MESSAGE);
            }
            catch (Exception ex)
            {
                MayfairStatic.outputMessage(this, ex);
            }

            Reminders reminders = new Reminders(desktop);
            desktop.add(reminders);
            reminders.show();
            this.dispose();
        }
        else
        {
            MayfairStatic.outputMessage(this, "Invalid Date", "Please select a completion date.", WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private com.toedter.calendar.JDateChooser celDate;
    private javax.swing.JTextField fieldDescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelOrdPrice;
    // End of variables declaration//GEN-END:variables
}
